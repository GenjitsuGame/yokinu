{"version":3,"sources":["../src/index.js"],"names":["http","require","express","logger","bodyParser","cors","Promise","path","routes","app","disable","use","json","urlencoded","extended","services","locals","promises","console","log","serviceName","all","apiPrefix","static","covers","join","__dirname","playlists","tracks","err","req","res","next","send","stack","port","process","env","PORT","server","createServer","listen","catch"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,aAAaH,QAAQ,aAAR,CAAnB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,UAAUL,QAAQ,UAAR,CAAhB;AACA,IAAMM,OAAON,QAAQ,MAAR,CAAb;AACA,IAAMO,SAASP,QAAQ,qBAAR,CAAf;;AAEA,2DAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACOQ,aADP,GACaP,SADb;;;AAGCO,cAAIC,OAAJ,CAAY,MAAZ;AACAD,cAAIE,GAAJ,CAAQR,OAAO,KAAP,CAAR;AACAM,cAAIE,GAAJ,CAAQP,WAAWQ,IAAX,EAAR;AACAH,cAAIE,GAAJ,CAAQP,WAAWS,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAL,cAAIE,GAAJ,CAAQN,MAAR;;AAEMU,kBATP,GASkB,CACf,QADe,CATlB;;;AAcCN,cAAIO,MAAJ,CAAWD,QAAX,GAAsB,EAAtB;AACME,kBAfP,GAekB,EAflB;;;AAiBCC,kBAAQC,GAAR,CAAY,qBAAZ;AAjBD;AAAA;AAAA;AAAA;AAkBC,sDAAwBJ,QAAxB,qGAAkC;AAAzBK,uBAAyB;;AAChCX,gBAAIO,MAAJ,CAAWD,QAAX,CAAoBK,WAApB,IAAmCnB,QAAQ,eAAemB,WAAvB,CAAnC;AACD;;AApBF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iBAsBOd,QAAQe,GAAR,CAAYJ,QAAZ,CAtBP;;AAAA;AAuBCC,kBAAQC,GAAR,CAAY,kBAAZ;;AAEMG,mBAzBP,GAyBmB,MAzBnB;;;AA2BCb,cAAIO,MAAJ,CAAWO,MAAX,GAAoB;AAClBC,oBAAQ;AADU,WAApB;;AAIAf,cAAIE,GAAJ,CAAQF,IAAIO,MAAJ,CAAWO,MAAX,CAAkBC,MAA1B,EAAkCtB,QAAQqB,MAAR,CAAehB,KAAKkB,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,MAA3B,EAAmC,QAAnC,CAAf,CAAlC;;AAEAjB,cAAIE,GAAJ,CAAQW,YAAY,YAApB,EAAkCd,OAAOmB,SAAzC;AACAlB,cAAIE,GAAJ,CAAQW,YAAY,WAApB,EAAiCd,OAAOO,QAAxC;AACAN,cAAIE,GAAJ,CAAQW,YAAY,SAApB,EAA+Bd,OAAOoB,MAAtC;;AAEAnB,cAAIE,GAAJ,CAAQ,UAACkB,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/Bd,oBAAQC,GAAR,CAAYU,GAAZ;AACAE,gBAAIE,IAAJ,CAASJ,IAAIK,KAAb;AACD,WAHD;;AAKMC,cA1CP,GA0CcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IA1ClC;AA2COC,gBA3CP,GA2CgBvC,KAAKwC,YAAL,CAAkB/B,GAAlB,CA3ChB;;AA4CC8B,iBAAOE,MAAP,CAAcN,IAAd;AACAjB,kBAAQC,GAAR,CAAY,uBAAuBgB,IAAnC;;AA7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,KA8CKO,KA9CL,CA8CW,eAAO;AAChBxB,UAAQC,GAAR,CAAYU,GAAZ;AACA,QAAMA,GAAN;AACD,CAjDD","file":"index.js","sourcesContent":["'use strict';\n\nconst http = require('http');\nconst express = require('express');\nconst logger = require('morgan');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst Promise = require('bluebird');\nconst path = require('path');\nconst routes = require('./core/routes/index');\n\n(async () => {\n  const app = express();\n\n  app.disable('etag');\n  app.use(logger('dev'));\n  app.use(bodyParser.json());\n  app.use(bodyParser.urlencoded({extended: false}));\n  app.use(cors());\n\n  const services = [\n    'gmusic',\n    // 'dropbox'\n  ];\n\n  app.locals.services = {};\n  const promises = [];\n\n  console.log('Loading services...');\n  for (let serviceName of services) {\n    app.locals.services[serviceName] = require('./modules/' + serviceName);\n  }\n\n  await Promise.all(promises);\n  console.log('Services loaded!');\n\n  const apiPrefix = '/api';\n\n  app.locals.static = {\n    covers: '/static/covers',\n  };\n\n  app.use(app.locals.static.covers, express.static(path.join(__dirname, '..', 'data', 'covers')));\n\n  app.use(apiPrefix + '/playlists', routes.playlists);\n  app.use(apiPrefix + '/services', routes.services);\n  app.use(apiPrefix + '/tracks', routes.tracks);\n\n  app.use((err, req, res, next) => {\n    console.log(err);\n    res.send(err.stack);\n  });\n\n  const port = process.env.PORT || 4100;\n  const server = http.createServer(app);\n  server.listen(port);\n  console.log('listening on port ' + port);\n})().catch(err => {\n  console.log(err);\n  throw err;\n});\n"]}