{"version":3,"sources":["../../../src/core/routes/tracks.js"],"names":["Promise","require","express","router","Router","db","route","get","req","res","next","skip","Number","query","limit","q","status","json","error","find","createFindTracksQuery","tracksP","Track","countP","count","tracks","data","map","track","covers","app","locals","static","cover","createCursor","length","catch","id","params","findById","_id","exec","services","service","getStream","path","stream","sendStatus","set","headers","pipe","fetched","lastElem","or","push","title","regexify","artist","album","$or","RegExp","module","exports"],"mappings":"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","file":"tracks.js","sourcesContent":["'use strict';\n\nconst Promise = require('bluebird');\nconst express = require('express');\nconst router = express.Router();\nconst db = require('../database/index');\n\nrouter\n  .route('/')\n  .get((req, res, next) => {\n    const skip = Number(req.query.skip);\n    const limit = Number(req.query.limit);\n    const q = req.query.q;\n\n    if (skip && (skip | 0) !== skip) return res.status(400).json({\n      error: 'skip must be an integer.'\n    });\n\n    if (limit && (limit | 0) !== limit) return res.status(400).json({\n      error: 'limit must be an integer.'\n    });\n\n    (async () => {\n      let find = q ? createFindTracksQuery(q) : {};\n      const tracksP = db.Track.find(find).skip(skip).limit(limit);\n      const countP = db.Track.count({});\n      const tracks = await\n        tracksP;\n      const count = await\n        countP;\n\n      res.json({\n        data: tracks.map(track => {\n          if (!track.covers) return track;\n          track.covers = track.covers.map(cover => {\n            return req.app.locals.static.covers + '/' + cover;\n          });\n          return track;\n        }),\n        next: createCursor(skip, tracks.length, count)\n      });\n    })().catch(next);\n  });\n\nrouter\n  .route('/:id/stream')\n  .get((req, res, next) => {\n    const id = req.params.id;\n    (async () => {\n      const track = await db.Track.findById({\n        _id: id\n      }).exec();\n\n      if (!track) return res.status(404).json({error: 'Track not found.'});\n      const stream = await req.app.locals.services[track.service].getStream(track.path);\n      if (!stream) return res.sendStatus(504);\n      res.set('accept-ranges', 'bytes');\n      res.set('content-type', 'audio/mpeg');\n      res.set('content-length', stream.headers['content-length']);\n      stream.pipe(res);\n    })().catch(next);\n  });\n\nfunction createCursor (skip, fetched, count) {\n  if (!fetched || !count) return;\n  let lastElem = fetched;\n  if (skip) lastElem += skip;\n  if (lastElem >= count) return;\n  return lastElem;\n}\n\nfunction createFindTracksQuery (q) {\n  const or = [];\n  or.push({title: regexify(q)});\n  or.push({artist: regexify(q)});\n  or.push({album: regexify(q)});\n  return {$or: or};\n}\n\nfunction regexify (q) {\n  return new RegExp(q, 'i');\n}\n\nmodule.exports = router;\n"]}